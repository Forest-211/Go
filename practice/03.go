package main

import (
	"fmt"
	"math"
)


func main() {
	calculatePerfectSquare()
}

// 一个整数，它加上 100 后是一个完全平方数，再加上 168 又是一个完全平方数，请问该数是多少？
func calculatePerfectSquare() {
	/*
		完全平方数：如果一个正整数 a 是某一个整数 b 的平方，那么这个正整数 a 叫做完全平方数
		（1）平方数的个位数字只能是 0， 1，4，5，6，9 。
		（2）任何偶数的平方一定能被 4 整除；任何奇数的平方被 4(或 8)除余 1，即被4 除余 2 或 3 的数一定不是完全平方数。
		（3）完全平方数的个位数字是奇数时，其十位上的数字必为偶数。完全平方数的个位数字是 6 时，其十位数字必为奇数。
		（4）凡个位数字是 5 但末两位数字不是 25 的自然数不是完全平方数；末尾只有奇数个 0 的自然数不是完全平方数；个位数字是 1，4，9 而十位数字为奇数的自然数不是完全平方数。
		（5）除 1 外，一个完全平方数分解质因数后，各个质因数的指数都是偶数，如果一个数质分解后， 各个指数都为偶数， 那么它肯定是个平方数。 完全平方数的所有因数的总个数是奇数个。因数个数为奇数的自然数一定是完全平方数。
		（6）若质数 p 整除完全平方数 a，则 |a。
		（7）如果 a 、b 是完全平方数， c=ab ，那么 c 也是完全平方数。
		（8）两个连续自然数的乘积一定不是平方数，两个连续自然数的平方数之间不再有平方数。
		（9）如果十位数字是奇数，则它的个位数字一定是6；反之也成立。
		推论1：如果一个数的十位数字是奇数，而个位数字不是6，那么这个数一定不是完全平方数。
		推论2：如果一个完全平方数的个位数字不是6，则它的十位数字是偶数。
		（10）偶数的平方是4的倍数；奇数的平方是4的倍数加1。
		（11）奇数的平方是8n+1型；偶数的平方为8n或8n+4型。（奇数：n比那个所乘的数-1；偶数：n比那个所乘的数-2）
		（12）形式必为下列两种之一：3k,3k+1。
		（13）不是5的因数或倍数的数的平方为5k+-1型，是5的因数或倍数的数为5k型。
		（14）形式具有下列形式之一：16m,16m+1,16m+4,16m+9。
		（15）性质11：如果质数p能整除a，但p的平方不能整除a，则a不是完全平方数。
		（16）在两个相邻的整数的平方数之间的所有整数都不是完全平方数。
		（17）一个正整数n是完全平方数的充分必要条件是n有奇数个因数（包括1和n本身）。
	*/
	i := 0
	for {
		x := int(math.Sqrt(float64(i + 100)))
		y := int(math.Sqrt(float64(i + 268)))

		if x*x == i+100 && y*y == i+268 {
			fmt.Printf("这个数字是 %d\n", i)  // 21
			break
		}
		i++
	}
}
